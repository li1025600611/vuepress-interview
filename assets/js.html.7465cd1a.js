import{_ as n,d as s}from"./app.ae542aeb.js";const a={},p=s(`<h1 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript" aria-hidden="true">#</a> JavaScript</h1><h3 id="_1-js-\u4E2D\u7684\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_1-js-\u4E2D\u7684\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> 1. JS \u4E2D\u7684\u6570\u636E\u7C7B\u578B</h3><p>js \u4E2D\u7684\u6570\u636E\u7C7B\u578B\u5206\u4E3A <strong>\u57FA\u672C\u7C7B\u578B</strong>\u548C<strong>\u5F15\u7528\u7C7B\u578B</strong></p><ul><li>\u7B80\u5355\u6570\u636E\u7C7B\u578B\u6709 6 \u79CD\uFF1ANumber\u3001String\u3001Boolean\u3001symbol\u3001null\u3001undefined (\u4E00\u4E2A symbol \u503C\u80FD\u4F5C\u4E3A\u5BF9\u8C61\u5C5E\u6027\u7684\u6807\u8BC6\u7B26\uFF1B\u8FD9\u662F\u8BE5\u6570\u636E\u7C7B\u578B\u4EC5\u6709\u7684\u76EE\u7684)</li><li>\u5F15\u7528\u7C7B\u578B\u53EA\u6709 1 \u79CD\uFF1Aobject \u5305\u62EC\u5BF9\u8C61\u3001\u6570\u7EC4\u3001\u51FD\u6570</li></ul><p>\u57FA\u672C\u7C7B\u578B\u6570\u636E\u4FDD\u5B58\u5728\u6808\u5185\u5B58\u4E2D\uFF0C\u5F15\u7528\u7C7B\u578B\u4FDD\u5B58\u5728\u5806\u5185\u5B58\u4E2D\uFF0C\u5F15\u7528\u5B58\u5728\u6808\u5185\u5B58\u4E2D\uFF0C\u5F15\u7528\u53EF\u4EE5\u7406\u89E3\u4E3A\u6570\u636E\u7684\u5B58\u50A8\u5730\u5740\u3002</p><p>\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u6211\u4EEC\u5728\u58F0\u660E\u7684\u65F6\u5019\u5E76\u4E0D\u80FD\u786E\u8BA4\u6570\u636E\u7C7B\u578B\uFF0C\u53EA\u6709\u5230\u8FD0\u884C\u671F\u95F4\u624D\u4F1A\u786E\u5B9A\u5F53\u524D\u7C7B\u578B\u3002</p><p>\u5224\u65AD\u6570\u636E\u7C7B\u578B\u7684\u4E09\u79CD\u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B2C\u4E00\u79CD\uFF1A\u901A\u8FC7typeof\u5224\u65AD \u53EA\u80FD\u5224\u65AD\u7B80\u5355\u7C7B\u578B \u590D\u6742\u7C7B\u578B\u90FD\u662Fobject \u5E76\u4E14null==object</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token string">&quot;str&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// number</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// object</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// object</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// object</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// boolean</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// symbol</span>

<span class="token comment">// \u7B2C\u4E8C\u79CD \u901A\u8FC7instanceof instanceof \u8FD0\u7B97\u7B26\u7528\u4E8E\u68C0\u6D4B\u6784\u9020\u51FD\u6570\u7684 prototype \u5C5E\u6027\u662F\u5426\u51FA\u73B0\u5728\u67D0\u4E2A\u5B9E\u4F8B\u5BF9\u8C61\u7684\u539F\u578B\u94FE\u4E0A\u3002</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token comment">// \u7B2C\u4E09\u79CD Object.prototype.toString.call()</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [object Array]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [object String]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [object Number]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [object Object]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p><strong>\u63A8\u8350\u7528 Object.prototype.toString.call()\u6765\u5224\u65AD, \u80FD\u591F\u7CBE\u786E\u7684\u8FD4\u56DE\u6570\u636E\u7684\u7C7B\u578B,\u5305\u62EC\u65E5\u671F/\u6B63\u5219\u8868\u8FBE\u5F0F/\u51FD\u6570\u7C7B\u578B</strong></p><h3 id="_2-\u6570\u7EC4\u7684\u5E38\u7528\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-\u6570\u7EC4\u7684\u5E38\u7528\u65B9\u6CD5" aria-hidden="true">#</a> 2.\u6570\u7EC4\u7684\u5E38\u7528\u65B9\u6CD5</h3><ul><li><p>\u589E\uFF08push\uFF09<br><code>push</code>: \u5411\u6570\u7EC4\u672B\u5C3E\u65B0\u589E\u4EFB\u610F\u6570\u91CF\u7684\u6570\u7EC4 \u8FD4\u56DE\u6570\u7EC4\u7684\u6700\u65B0\u957F\u5EA6(\u603B\u957F\u5EA6) \u4F1A\u6539\u53D8\u539F\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> addNum <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;addNum,arr :&gt;&gt; &quot;</span><span class="token punctuation">,</span> addNum<span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5 [1,2,3,4,4]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>unshift</code>: \u5411\u6570\u7EC4\u5F00\u5934\u63D2\u5165\u4EFB\u610F\u6570\u91CF\u7684\u53C2\u6570 \u8FD4\u56DE\u6570\u7EC4\u7684\u6700\u65B0\u957F\u5EA6 \u4F1A\u6539\u53D8\u539F\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> addNum <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;arr :&gt;&gt; &quot;</span><span class="token punctuation">,</span> arr<span class="token punctuation">,</span> addNum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [0,1,2,3] 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>splice</code>: \u4F20\u5165\u4E09\u4E2A\u53C2\u6570\uFF0C\u5206\u522B\u662F\u5F00\u59CB\u7684\u4E0B\u6807\uFF0C\u8981\u5220\u9664\u7684\u5143\u7D20\u4E2A\u6570\uFF0C\u8981\u63D2\u5165\u7684\u5143\u7D20\u3002\u8FD4\u56DE\u88AB\u5220\u9664\u7684\u5143\u7D20\u7EC4\u6210\u7684\u6570\u7EC4\u3002\u6539\u53D8\u539F\u6709\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> del <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5220\u9664\u4E0B\u6807\u4E3A2\u7684\u5143\u7D20</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;del :&gt;&gt; &quot;</span><span class="token punctuation">,</span> del<span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [3] [1,2]</span>

<span class="token keyword">let</span> delAndReplace <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u75284\u66FF\u63623</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;delAndReplace :&gt;&gt; &quot;</span><span class="token punctuation">,</span> delAndReplace<span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [3] [1,2,4]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>concat</code>: \u7528\u4E8E\u5408\u5E76\u4E24\u4E2A\u6216\u591A\u4E2A\u6570\u7EC4\uFF0C\u8FD4\u56DE\u65B0\u6570\u7EC4\uFF0C\u4E0D\u4F1A\u6539\u53D8\u539F\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> newArr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;arr,newArr :&gt;&gt; &quot;</span><span class="token punctuation">,</span> arr<span class="token punctuation">,</span> newArr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1,2,3] [1, 2, 3, 4, 5, 6, 7, 8, 9]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>\u5220\u9664<br><code>pop</code>: \u5220\u9664\u6700\u540E\u4E00\u4E2A\u5143\u7D20 \u8FD4\u56DE\u88AB\u5220\u9664\u7684\u5143\u7D20 \u6539\u53D8\u539F\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> lastDel <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;lastDel :&gt;&gt; &quot;</span><span class="token punctuation">,</span> lastDel<span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3 [1,2]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>shift</code>: \u5220\u9664\u7B2C\u4E00\u4E2A\u5143\u7D20 \u8FD4\u56DE\u88AB\u5220\u9664\u7684\u5143\u7D20 \u6539\u53D8\u539F\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> firstDel <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;firstDel :&gt;&gt; &quot;</span><span class="token punctuation">,</span> firstDel<span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1 [2,3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>splice</code>: \u5220\u9664\u67D0\u51E0\u4E2A\u5143\u7D20 \u8FD4\u56DE\u88AB\u5220\u9664\u7684\u5143\u7D20\u7EC4\u6210\u7684\u6570\u7EC4 \u6539\u53D8\u539F\u6570\u7EC4 <code>slice</code>: \u8FD9\u4E00\u5BF9\u8C61\u662F\u4E00\u4E2A\u7531 start \u548C end \u51B3\u5B9A\u7684\u539F\u6570\u7EC4\u7684\u6D45\u62F7\u8D1D\uFF08\u5305\u62EC start\uFF0C\u4E0D\u5305\u62EC end\uFF09\uFF0C\u5176\u4E2D start \u548C end \u4EE3\u8868\u4E86\u6570\u7EC4\u5143\u7D20\u7684\u7D22\u5F15\u3002\u4E0D\u6539\u53D8\u539F\u6570\u7EC4 \u8FD4\u56DE\u4E00\u4E2A\u65B0\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> newArr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6D45\u62F7\u8D1D\u4ECE\u7B2C0\u4E2A\u5143\u7D20\u5230\u7B2C1\u4E2A\u5143\u7D20\u7EC4\u6210\u6570\u7EC4</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;newArr :&gt;&gt; &quot;</span><span class="token punctuation">,</span> newArr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1,2]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>\u6539<br><code>splice</code>: \u540C\u4E0A \u7528\u65B0\u5143\u7D20\u66FF\u6362\u65E7\u5143\u7D20</p></li><li><p>\u67E5<br><code>indexOf</code>: \u8FD4\u56DE\u8981\u67E5\u627E\u7684\u5143\u7D20\u5728\u6570\u7EC4\u4E2D\u7684\u4E0B\u6807\uFF0C\u5982\u679C\u6CA1\u627E\u5230\u5219\u8FD4\u56DE -1<br><code>includes</code>: \u6570\u7EC4\u662F\u5426\u5305\u542B\u67D0\u4E2A\u5143\u7D20\u3002\u8FD4\u56DE true \u6216 false<br><code>find</code>: \u67E5\u627E\u6EE1\u8DB3\u67D0\u4E2A\u6761\u4EF6\u7684\u5143\u7D20\u3002\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u6EE1\u8DB3\u6761\u4EF6\u7684\u5143\u7D20<br><code>findIndex</code>: \u67E5\u627E\u6EE1\u8DB3\u67D0\u4E2A\u6761\u4EF6\u7684\u5143\u7D20\u7D22\u5F15\u3002\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u6EE1\u8DB3\u6761\u4EF6\u7684\u5143\u7D20\u7D22\u5F15</p></li><li><p>\u6392\u5E8F<br><code>reverse</code>: \u53CD\u8F6C\u6570\u7EC4 \u6539\u53D8\u539F\u6709\u6570\u7EC4 \u8FD4\u56DE\u65B0\u6570\u7EC4<br><code>sort</code>: \u6570\u7EC4\u6392\u5E8F \u6539\u53D8\u539F\u6709\u6570\u7EC4 \u8FD4\u56DE\u65B0\u6570\u7EC4</p></li><li><p>\u8FED\u4EE3\uFF08\u5FAA\u73AF \u90FD\u4E0D\u6539\u53D8\u539F\u6570\u7EC4\uFF09<br><code>forEach</code>: \u5BF9\u6570\u7EC4\u7684\u6BCF\u4E00\u9879\u90FD\u8FD0\u884C\u4F20\u5165\u7684\u51FD\u6570\u3002\u6CA1\u6709\u8FD4\u56DE\u503C\u3002 forEach() \u65B9\u6CD5\u662F\u4E00\u4E2A\u8FED\u4EE3\u65B9\u6CD5\u3002\u5B83\u6309\u7D22\u5F15\u5347\u5E8F\u5730\u4E3A\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u8C03\u7528\u4E00\u6B21\u63D0\u4F9B\u7684 callbackFn \u51FD\u6570\u3002\u4E0E map() \u4E0D\u540C\uFF0CforEach() \u603B\u662F\u8FD4\u56DE undefined\uFF0C\u800C\u4E14\u4E0D\u80FD\u7EE7\u7EED\u94FE\u5F0F\u8C03\u7528\u3002\u5176\u5178\u578B\u7684\u7528\u6CD5\u662F\u5728\u94FE\u5F0F\u8C03\u7528\u7684\u672B\u5C3E\u6267\u884C\u67D0\u4E9B\u64CD\u4F5C\u3002forEach() \u65B9\u6CD5\u662F\u901A\u7528\u7684\u3002\u5B83\u53EA\u671F\u671B this \u503C\u5177\u6709 length \u5C5E\u6027\u548C\u6574\u6570\u952E\u7684\u5C5E\u6027\u3002\u9664\u975E\u629B\u51FA\u5F02\u5E38\uFF0C\u5426\u5219\u6CA1\u6709\u529E\u6CD5\u505C\u6B62\u6216\u4E2D\u65AD forEach() \u5FAA\u73AF\u3002\u5982\u679C\u6709\u8FD9\u6837\u7684\u9700\u6C42\uFF0C\u5219\u4E0D\u5E94\u8BE5\u4F7F\u7528 forEach() \u65B9\u6CD5\u3002<br><code>map</code>: \u5BF9\u6570\u7EC4\u7684\u6BCF\u4E00\u9879\u90FD\u8FD0\u884C\u4F20\u5165\u7684\u51FD\u6570\u3002\u8FD4\u56DE\u6BCF\u6B21\u7ED3\u679C\u7EC4\u6210\u7684\u65B0\u6570\u7EC4\u3002<br><code>filter</code>: \u5BF9\u6570\u7EC4\u7684\u6BCF\u4E00\u9879\u90FD\u8FD0\u884C\u4F20\u5165\u7684\u51FD\u6570\u3002\u8FD4\u56DE\u8FC7\u6EE4\u540E\u7684\u6570\u7EC4\u5B83\u4E3A\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u8C03\u7528\u63D0\u4F9B\u7684 callbackFn \u51FD\u6570\u4E00\u6B21\uFF0C\u5E76\u6784\u9020\u4E00\u4E2A\u7531\u6240\u6709\u8FD4\u56DE\u771F\u503C\u7684\u5143\u7D20\u503C\u7EC4\u6210\u7684\u65B0\u6570\u7EC4\u3002\u672A\u901A\u8FC7 callbackFn \u6D4B\u8BD5\u7684\u6570\u7EC4\u5143\u7D20\u4E0D\u4F1A\u5305\u542B\u5728\u65B0\u6570\u7EC4\u4E2D\u3002<br><code>some</code>: \u5BF9\u6570\u7EC4\u7684\u6BCF\u4E00\u9879\u90FD\u6267\u884C\u64CD\u4F5C\uFF0C\u5982\u679C\u6709\u4E00\u4E2A\u8FD4\u56DE true. \u5219\u7ED3\u679C\u5C31\u4E3A true\uFF0C\u5426\u5219\u8FD4\u56DE false \u4E0D\u6539\u53D8\u539F\u6570\u7EC4,\u5982\u679C\u627E\u5230\u8FD9\u6837\u7684\u5143\u7D20\uFF0Csome() \u65B9\u6CD5\u5C06\u4F1A\u7ACB\u5373\u8FD4\u56DE true \u5E76\u505C\u6B62\u904D\u5386\u6570\u7EC4\u3002\u5426\u5219\uFF0C\u5982\u679C callbackFn \u5BF9\u6240\u6709\u5143\u7D20\u90FD\u8FD4\u56DE\u5047\u503C\uFF0Csome() \u5C31\u4F1A\u8FD4\u56DE false\u3002<br></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item <span class="token operator">&lt;=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>every</code>: \u5BF9\u6570\u7EC4\u7684\u6BCF\u4E00\u9879\u90FD\u6267\u884C\u64CD\u4F5C\uFF0C\u53EA\u6709\u6240\u6709\u9879\u90FD\u8FD4\u56DE true. \u7ED3\u679C\u624D\u4E3A true<br></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item <span class="token operator">&lt;=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>\u8F6C\u6362 join: \u5C06\u4E00\u4E2A\u6570\u7EC4\uFF08\u6216\u4E00\u4E2A\u7C7B\u6570\u7EC4\u5BF9\u8C61\uFF09\u7684\u6240\u6709\u5143\u7D20\u8FDE\u63A5\u6210\u4E00\u4E2A\u5B57\u7B26\u4E32\u5E76\u8FD4\u56DE\u8FD9\u4E2A\u5B57\u7B26\u4E32\uFF0C\u7528\u9017\u53F7\u6216\u6307\u5B9A\u7684\u5206\u9694\u7B26\u5B57\u7B26\u4E32\u5206\u9694\u3002\u5982\u679C\u6570\u7EC4\u53EA\u6709\u4E00\u4E2A\u5143\u7D20\uFF0C\u90A3\u4E48\u5C06\u8FD4\u56DE\u8BE5\u5143\u7D20\u800C\u4E0D\u4F7F\u7528\u5206\u9694\u7B26\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;and&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1and2and3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;and&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ul><h3 id="_3-\u5E38\u7528\u5B57\u7B26\u4E32\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-\u5E38\u7528\u5B57\u7B26\u4E32\u65B9\u6CD5" aria-hidden="true">#</a> 3. \u5E38\u7528\u5B57\u7B26\u4E32\u65B9\u6CD5</h3><ul><li>\u589E <br><code>concat</code>: \u7528\u4E8E\u5C06\u4E00\u4E2A\u6216\u591A\u4E2A\u5B57\u7B26\u4E32\u62FC\u63A5\u6210\u4E00\u4E2A\u65B0\u5B57\u7B26\u4E32\u3002\u4E0D\u6539\u53D8\u539F\u5B57\u7B26\u4E32\u3002</li><li>\u5220 <br><code>slice</code>: \u63D0\u53D6\u5B57\u7B26\u4E32\u7684\u4E00\u90E8\u5206 \u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u5B57\u7B26\u4E32 \u4E0D\u4F1A\u6539\u53D8\u539F\u5B57\u7B26\u4E32;\u4F20\u5165\u4E24\u4E2A\u53C2\u6570 \u5F00\u59CB\u7D22\u5F15\u548C\u7ED3\u675F\u7D22\u5F15\uFF0C\u63D0\u53D6\u5305\u62EC\u5F00\u59CB\u7D22\u5F15\u4F46\u4E0D\u5305\u62EC\u7ED3\u675F\u7D22\u5F15\u4E2D\u95F4\u7684\u90E8\u5206\uFF1B\u5982\u679C\u503C\u4E3A\u8D1F\u6570\uFF0C\u4F1A\u88AB\u5F53\u505A strLength + beginIndex \u770B\u5F85;endIndex \u53EF\u9009 \u5982\u679C\u4E0D\u4F20 \u5219\u63D0\u53D6\u5230\u5B57\u7B26\u4E32\u672B\u5C3E<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// abc \u4E0D\u5305\u542B3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ef</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// efg</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><code>substring</code>: \u63D0\u53D6\u5B57\u7B26\u4E32 \u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u5B57\u7B26\u4E32 \u4E0D\u4F1A\u6539\u53D8\u539F\u5B57\u7B26\u4E32\uFF1B\u8DDF slice \u5DEE\u4E0D\u591A= =</li><li>\u6539 <br><code>trim()\u3001trimLeft()\u3001trimRight()</code>: \u53BB\u9664\u7A7A\u683C\u3002\u5E76\u8FD4\u56DE\u65B0\u7684\u5B57\u7B26\u4E32\u3002 <code>repeat</code>: \u590D\u5236\u5F53\u524D Str \u4F20\u5165\u6570\u5B57 \u8FD4\u56DE\u590D\u5236\u591A\u5C11\u6B21\u540E\u7684\u5B57\u7B26\u4E32<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// abcdefgabcdefgabcdefg</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><code>addStart addEnd</code>: \u7528\u6307\u5B9A\u5B57\u7B26\u4E32\u586B\u5145\u5F53\u524D\u5B57\u7B26\u4E32<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// aaaabcdefg</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">padEnd</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// abcdefgaaa</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><code>toLowerCase()\u3001 toUpperCase()</code>: \u5927\u5C0F\u5199\u8F6C\u6362<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ABCDEFG</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// abcdefg</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li>\u67E5<br><code>charAt</code>: \u8FD4\u56DE\u4E00\u4E2A\u7531\u7ED9\u5B9A\u7D22\u5F15\u5904\u7684\u5355\u4E2A UTF-16 \u7801\u5143\u6784\u6210\u7684\u65B0\u5B57\u7B26\u4E32;\u76F8\u5F53\u4E8E\u67E5\u8BE2\u5E76\u8FD4\u56DE\u7B2C N \u4E2A\u5B57\u7B26\u4E32<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// a</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;123456&quot;</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><code>at</code>: \u548C charAt \u76F8\u4F3C\u53EF\u4EE5\u67E5\u8BE2\u5E76\u8FD4\u56DE\u7B2C N \u4E2A\u5B57\u7B26\u4E32 \u4F46 at \u652F\u6301\u8D1F\u6570 \u4ECE\u6700\u540E\u4E00\u4E2A\u5F80\u524D\u67E5 <code>indexOf</code>: \u5728\u5B57\u7B26\u4E32\u4E2D\u641C\u7D22\u6307\u5B9A\u5B50\u5B57\u7B26\u4E32\uFF0C\u5E76\u8FD4\u56DE\u5176\u7B2C\u4E00\u6B21\u51FA\u73B0\u7684\u4F4D\u7F6E\u7D22\u5F15\u3002\u627E\u4E0D\u5230\u8FD4\u56DE-1<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;e&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li>\u8F6C\u6362 <code>split</code>: \u7528\u6307\u5B9A\u5B57\u7B26\u5206\u5272\u5B57\u7B26\uFF0C\u8FD4\u56DE\u5206\u5272\u540E\u7684\u6570\u7EC4<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;e&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;abcd&#39;, &#39;fg&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ul><h3 id="_4-\u7C7B\u578B\u8F6C\u6362\u673A\u5236" tabindex="-1"><a class="header-anchor" href="#_4-\u7C7B\u578B\u8F6C\u6362\u673A\u5236" aria-hidden="true">#</a> 4. \u7C7B\u578B\u8F6C\u6362\u673A\u5236</h3><p>JavaScript \u4E2D\u7684\u7C7B\u578B\u8F6C\u6362\u53EF\u4EE5\u5206\u4E3A\u663E\u5F0F\u7C7B\u578B\u8F6C\u6362\u548C\u9690\u5F0F\u7C7B\u578B\u8F6C\u6362\u3002</p><ul><li>\u663E\u5F0F\u7C7B\u578B\u8F6C\u6362\uFF1A\u4F7F\u7528 Number(), String(), Boolean(), parseInt(), parseFloat()\u8FD9\u79CD\u663E\u793A\u8F6C\u6362\u51FD\u6570</li><li>\u9690\u5F0F\u7C7B\u578B\u8F6C\u6362\uFF1A\u4E0D\u9700\u8981\u663E\u793A\u8C03\u7528\u51FD\u6570\u3002\u6BD4\u5982 !!&#39;test&#39;, +&#39;22&#39;\u3002 <ul><li>\u5B57\u7B26\u4E32\u8F6C\u6570\u5B57\uFF1A<code>Number(str) ; parseInt(str) ; str\\*1 ; str-0</code></li><li>\u6570\u5B57\u8F6C\u5B57\u7B26\u4E32\uFF1A<code>num.toString() ; String(num) ; num+&#39;&#39;</code></li><li>\u5E03\u5C14\u503C\u8F6C\u6570\u5B57\uFF1A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>\u6570\u5B57\u3001\u5B57\u7B26\u4E32\u7B49\u8F6C\u5316\u4E3A\u5E03\u5C14\u503C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token operator">!</span>str<span class="token punctuation">,</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">Boolean</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true true true true true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token function">Boolean</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false false false false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ul><h3 id="_5-\u6DF1\u62F7\u8D1D\u548C\u6D45\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#_5-\u6DF1\u62F7\u8D1D\u548C\u6D45\u62F7\u8D1D" aria-hidden="true">#</a> 5. \u6DF1\u62F7\u8D1D\u548C\u6D45\u62F7\u8D1D</h3><p>\u5F53\u62F7\u8D1D\u5BF9\u8C61\u4E3A\u5F15\u7528\u7C7B\u578B\u65F6\uFF0C\u6D45\u62F7\u8D1D \u62F7\u8D1D\u5BF9\u8C61\u548C\u6E90\u5BF9\u8C61\u4ECD\u7136\u6307\u5411\u540C\u4E00\u5185\u5B58\u5730\u5740\uFF0C\u4EFB\u610F\u5BF9\u8C61\u7684\u4FEE\u6539\u4F1A\u5F71\u54CD\u53E6\u4E00\u4E2A\uFF1B\u6DF1\u62F7\u8D1D\u5219\u662F\u91CD\u65B0\u5F00\u8F9F\u5185\u5B58\uFF0C\u4E24\u4E2A\u5BF9\u8C61\u6307\u5411\u4E0D\u540C\u7684\u5730\u5740\u4E0D\u4F1A\u76F8\u4E92\u5F71\u54CD<br></p><ul><li><p>\u5E38\u7528\u62F7\u8D1D\u65B9\u6CD5 <code>Object.assign()</code> \u548C\u6269\u5C55\u8FD0\u7B97\u7B26 <code>...</code> \u90FD\u5C5E\u4E8E\u6D45\u62F7\u8D1D</p></li><li><p>\u5B9E\u73B0\u6DF1\u62F7\u8D1D\u5E38\u7528\u65B9\u6CD5</p><ul><li><code>JSON.parse(JSON.stringify(obj))</code> \u9700\u8981\u6CE8\u610F\uFF1A\u5982\u679C obj \u662F\u51FD\u6570\u6216\u8005 undefined \u4F1A\u62A5\u9519</li><li><code>lodash.cloneDeep()</code></li><li>\u624B\u5199\u6DF1\u62F7\u8D1D\u51FD\u6570\uFF08\u9012\u5F52\uFF09</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">!==</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">||</span> obj <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> result <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">Array</span> <span class="token operator">||</span> obj <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div></li></ul>`,19);function t(o,e){return p}var l=n(a,[["render",t],["__file","js.html.vue"]]);export{l as default};
